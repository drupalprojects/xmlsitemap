<?php
// $Id$

/**
 * @file
 * Install file for XML Sitemap
 */

/*****************************************************************************
 * Drupal hooks.
 ****************************************************************************/

/**
 * Implementation of hook_enable().
 */
function xmlsitemap_enable() {
  xmlsitemap_update_sitemap();
}

/**
 * Implementation of hook_install().
 */
function xmlsitemap_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {xmlsitemap} (
        loc varchar(255) NOT NULL default '',
        lastmod int(11),
        changefreq int(11),
        priority float
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;
    case 'pgsql':
      db_query("CREATE TABLE {xmlsitemap} (
        loc varchar(255) NOT NULL default '',
        lastmod integer,
        changefreq integer,
        priority real
      );");
      db_query('CREATE OR REPLACE FUNCTION first(anyelement, anyelement) RETURNS anyelement AS \'SELECT COALESCE($1, $2);\' LANGUAGE \'sql\';');
      @db_query("DROP AGGREGATE first(anyelement)");
      db_query("CREATE AGGREGATE first(
        sfunc = first,
        basetype = anyelement,
        stype = anyelement
      );");
      break;
  }
  db_query("DELETE FROM {url_alias} WHERE dst LIKE 'sitemap%.xml'");
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_update_1() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("CREATE TABLE {xmlsitemap} (
        loc varchar(128) NOT NULL default '',
        lastmod int(11),
        changefreq int(11),
        priority float
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;
  }
  return $ret;
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_update_2() {
  $ret = array();
  $result = array();
  if ($GLOBALS['db_type'] == 'pgsql') {
    $ret[] = update_sql('CREATE OR REPLACE FUNCTION first(anyelement, anyelement) RETURNS anyelement AS \'SELECT COALESCE($1, $2);\' LANGUAGE \'sql\';');
    $result = @update_sql("DROP AGGREGATE first(anyelement)");
    if ($result['success']) {
      $ret[] = $result;
    }
    $ret[] = update_sql("CREATE AGGREGATE first(
      sfunc = first,
      basetype = anyelement,
      stype = anyelement
    );");
  }
  menu_rebuild();
  return array(
    0 => array(
      'success' => TRUE,
      'query' => 'REBUILD DRUPAL MENU',
    )
  );
  return $ret;
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_update_3() {
  return array();
}
  
/**
 * Implementation of hook_update_N().
 * Try to remove any temporary files left.
 */
function xmlsitemap_update_4() {
  return array();
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_update_5() {
  return array();
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_update_6() {
  return array();
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_update_7() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("ALTER TABLE {xmlsitemap} CHANGE loc loc varchar(255) NOT NULL default ''");
      break;
    case 'pgsql':
      db_change_column($ret, 'xmlsitemap', 'loc', 'loc', 'varchar(255)', array('not null' => TRUE, 'default' => "''"));
      break;
  }
  $ret[] = update_sql("DELETE FROM {cache_page}
    WHERE cid LIKE '%%gss.xsl' OR cid LIKE '%%sitemap%%.xml'"
  );
  return $ret;
}

/**
 * Implementation of hook_uninstall().
 */
function xmlsitemap_uninstall() {
  db_query("DROP TABLE {xmlsitemap}");
  db_query("DELETE FROM {variable} WHERE name LIKE 'xmlsitemap\_%'");
}
