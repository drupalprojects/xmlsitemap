<?php
// $Id$

/**
 * Implementation of hook_install().
 */
function xmlsitemap_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {xmlsitemap} (
        loc varchar(128) NOT NULL default '',
        lastmod int(11),
        changefreq int(11),
        priority float
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      db_query("CREATE TABLE {xmlsitemap_additional} (
        path varchar(128) NOT NULL default '',
        pid int,
        last_changed int(11),
        previously_changed int(11),
        priority float,
        PRIMARY KEY (path)
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;
    case 'pgsql':
      db_query("CREATE TABLE {xmlsitemap} (
        loc varchar(128) NOT NULL default '',
        lastmod integer,
        changefreq integer,
        priority real
      );");
      db_query("CREATE TABLE {xmlsitemap_additional} (
        path varchar(128) NOT NULL default '',
        pid integer,
        last_changed integer,
        previously_changed integer,
        priority real,
        PRIMARY KEY (path)
      );");
      break;
  }
  db_query("DELETE FROM {url_alias} WHERE dst LIKE 'sitemap%.xml'");
}

/**
 * Implementation of hook_enable().
 */
function xmlsitemap_enable() {
  global $base_path;
  $xsl = file_get_contents(drupal_get_path('module', 'xmlsitemap') .'/gss/gss.xsl');

  $css_start = strpos($xsl, '<link href="') + strlen('<link href="');
  $css_length = strpos($xsl, '" type="text/css" rel="stylesheet"/>') - $css_start;
  $xsl = substr_replace($xsl, $base_path . drupal_get_path('module', 'xmlsitemap') .'/gss/gss.css', $css_start, $css_length);

  $js_start = strpos($xsl, '<script src="') + strlen('<script src="');
  $js_length = strpos($xsl, '"></script>') - $js_start;
  $xsl = substr_replace($xsl, $base_path . drupal_get_path('module', 'xmlsitemap') .'/gss/gss.js', $js_start, $js_length);

  if (file_check_directory(($path = file_directory_path() .'/xmlsitemap'), FILE_CREATE_DIRECTORY)) {
    file_save_data($xsl, "$path/gss.xsl", FILE_EXISTS_REPLACE);
  }
}

/**
 * Implementation of hook_disable().
 */
function xmlsitemap_disable() {
  $path = file_directory_path() .'/xmlsitemap';
  if ($dir = @opendir($path)) {
    while (($file = readdir($dir)) !== FALSE) {
      if ($file != '.' && $file != '..') {
        unlink("$path/$file");
      }
    }
    closedir($dir);
    rmdir($path);
  }
}

/**
 * Implementation of hook_uninstall().
 */
function xmlsitemap_uninstall() {
  db_query("DROP TABLE {xmlsitemap}");
  db_query("DROP TABLE {xmlsitemap_additional}");
  $settings = db_query("SELECT name FROM {variable} WHERE name LIKE 'xmlsitemap\_%'");
  while ($variable = db_fetch_object($settings)) {
    variable_del($variable->name);
  }
}

/**
 * Implementation of hook_update_N().
 */
function xmlsitemap_update_1() {
  $ret = array();
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      $ret[] = update_sql("CREATE TABLE {xmlsitemap} (
        loc varchar(128) NOT NULL default '',
        lastmod int(11),
        changefreq int(11),
        priority float
      ) /*!40100 DEFAULT CHARACTER SET utf8 */;");
      break;
    case 'pgsql':
      $ret[] = update_sql("CREATE TABLE {xmlsitemap} (
        loc varchar(128) NOT NULL default '',
        lastmod integer,
        changefreq integer,
        priority real
      );");
      break;
  }
  return $ret;
}

